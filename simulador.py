import random
import time
from notificacao import enviar_alerta_critica

estacoes_linha_8 = [
    "J√∫lio Prestes", "Palmeiras-Barra Funda", "Lapa", "Domingos de Moraes", "Imperatriz Leopoldina",
    "Presidente Altino", "Osasco", "Comandante Sampaio", "Itapevi", "Amador Bueno", "Ambuit√°", "Santa Rita"
]

estacoes_linha_9 = [
    "Osasco", "Presidente Altino", "Ceasa", "Vila Lobos-Jaguar√©", "Cidade Universit√°ria", "Pinheiros",
    "Hebraica-Rebou√ßas", "Cidade Jardim", "Vila Ol√≠mpia", "Berrini", "Morumbi-Claro", "Granja Julieta",
    "Jo√£o Dias", "Santo Amaro", "Socorro", "Jurubatuba-Senac", "Aut√≥dromo", "Primavera-Interlagos",
    "Graja√∫", "Bruno Covas-Mendes-Vila Natal"
]

def gerar_alerta_simulado():
    sistemas = [
        ("freio", "falha no sistema de freio"),
        ("tracao", "problema de tra√ß√£o detectado"),
        ("energia", "queda de energia em esta√ß√£o"),
        ("bateria", "n√≠vel cr√≠tico de bateria"),
        ("motor", "falha no motor do trem"),
        ("porta", "porta travada"),
        ("incendio", "detec√ß√£o de fuma√ßa no vag√£o"),
        ("descarrilamento", "poss√≠vel descarrilamento detectado"),
        ("alagamento", "√°gua invadindo trecho 8"),
        ("chuva_intensa", "chuva acima do limite operacional"),
        ("temperatura_extrema", "calor acima de 42¬∫C na via"),
        ("comunicacao", "perda de sinal com trem"),
        ("sensor", "falha de calibra√ß√£o nos sensores")
    ]
    sistema, descricao = random.choice(sistemas)
    linha = random.choice(["8", "9"])
    estacao = random.choice(estacoes_linha_8 if linha == "8" else estacoes_linha_9)

    return {
        "trem": random.randint(1000, 9999),
        "sistema": sistema,
        "mensagem": f"üö® {descricao} detectada na esta√ß√£o {estacao}, Linha {linha}.",
        "linha": linha,
        "estacao": estacao
    }

if __name__ == "__main__":
    alerta_teste = {
        "trem": "9999",
        "sistema": "freio",
        "mensagem": "üö® Teste de alerta cr√≠tico via simulador!",
        "hora": "2025-05-11T22:00:00",
        "prioridade": "Alta"
    }
    enviar_alerta_critica(alerta_teste)